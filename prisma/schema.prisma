// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// comando pra enviar uma migration(tabela pro banco)
//yarn prisma migrate dev

model User {
  id       String @id @default(uuid())
  name     String
  password String
  email    String

  created_at DateTime? @default(now())
  upated_at  DateTime? @default(now())
  waiter     Waiter[]

  @@map("users")
}

model Category {
  id         String    @id @default(uuid())
  name       String
  created_at DateTime? @default(now())
  upated_at  DateTime? @default(now())
  products   Product[]

  @@map("categories")
}

model Product {
  id          String    @id @default(uuid())
  name        String
  price       Float
  description String
  banner      String
  created_at  DateTime? @default(now())
  upated_at   DateTime? @default(now())

  category    Category @relation(fields: [category_id], references: [id])
  category_id String
  items       Item[]

  @@map("products")
}

model Order {
  id     String  @id @default(uuid())
  table  Int
  status Boolean @default(false)
  draft  Boolean @default(true)
  name   String?

  created_at DateTime? @default(now())
  upated_at  DateTime? @default(now())

  items Item[]

  @@map("orders")
}

model Item {
  id         String    @id @default(uuid())
  amoun      Int
  created_at DateTime? @default(now())
  upated_at  DateTime? @default(now())

  order    Order  @relation(fields: [order_id], references: [id])
  order_id String

  product    Product @relation(fields: [product_id], references: [id])
  product_id String

  @@map("items")
}

model Waiter {
  id       String  @id @default(uuid())
  name     String
  email    String
  password String
  status   Boolean
  User     User?   @relation(fields: [restauranteId], references: [id])
  restauranteId   String?
}
